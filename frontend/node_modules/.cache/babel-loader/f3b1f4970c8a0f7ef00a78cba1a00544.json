{"ast":null,"code":"import _classCallCheck from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gedanken01/Desktop/Readable/frontend/src/components/simpleMenu.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport * as ReadableAPI from '../utils/ReadableAPI';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n};\n\nvar SimpleListMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleListMenu, _React$Component);\n\n  function SimpleListMenu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SimpleListMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SimpleListMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorEl: null,\n      selectedIndex: 1,\n      options: []\n    };\n\n    _this.handleClickListItem = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleMenuItemClick = function (event, index) {\n      _this.setState({\n        selectedIndex: index,\n        anchorEl: null\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleListMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ReadableAPI.getAllCategories().then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          options: response.name\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          anchorEl = _this$state.anchorEl,\n          options = _this$state.options;\n      if (!this.state.options.length) return null;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"lock-menu\",\n        \"aria-label\": \"When device is locked\",\n        onClick: this.handleClickListItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"When device is locked\",\n        secondary: options[this.state.selectedIndex].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))), React.createElement(Menu, {\n        id: \"lock-menu\",\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, options.map(function (option, index) {\n        return React.createElement(MenuItem, {\n          key: option.name,\n          disabled: index === 0,\n          selected: index === _this3.state.selectedIndex,\n          onClick: function onClick(event) {\n            return _this3.handleMenuItemClick(event, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, option);\n      })));\n    }\n  }]);\n\n  return SimpleListMenu;\n}(React.Component);\n\nSimpleListMenu.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimpleListMenu);","map":{"version":3,"sources":["/home/gedanken01/Desktop/Readable/frontend/src/components/simpleMenu.js"],"names":["React","PropTypes","withStyles","List","ListItem","ListItemText","MenuItem","Menu","ReadableAPI","styles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","SimpleListMenu","state","anchorEl","selectedIndex","options","handleClickListItem","event","setState","currentTarget","handleMenuItemClick","index","handleClose","getAllCategories","then","response","console","log","name","classes","props","length","Boolean","map","option","Component","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,KAAKC,WAAZ,MAA6B,sBAA7B;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,QAAQ,EAAE,GAFN;AAGJC,MAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADiB,GAAL;AAAA,CAApB;;IAQMC,c;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,aAAa,EAAE,CAFT;AAGNC,MAAAA,OAAO,EAAE;AAHH,K;;UAMRC,mB,GAAsB,UAAAC,KAAK,EAAI;AAC7B,YAAKC,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEI,KAAK,CAACE;AAAlB,OAAd;AACD,K;;UAEDC,mB,GAAsB,UAACH,KAAD,EAAQI,KAAR,EAAkB;AACtC,YAAKH,QAAL,CAAc;AAAEJ,QAAAA,aAAa,EAAEO,KAAjB;AAAwBR,QAAAA,QAAQ,EAAE;AAAlC,OAAd;AACD,K;;UAEDS,W,GAAc,YAAM;AAClB,YAAKJ,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,K;;;;;;;wCACkB;AAAA;;AACjBZ,MAAAA,WAAW,CAACsB,gBAAZ,GAA+BC,IAA/B,CAAoC,UAAAC,QAAQ,EAAI;AAC9CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAA,MAAI,CAACP,QAAL,CAAc;AAACH,UAAAA,OAAO,EAACU,QAAQ,CAACG;AAAlB,SAAd;AACD,OAHD;AAID;;;6BACQ;AAAA;;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,wBAEsB,KAAKjB,KAF3B;AAAA,UAECC,QAFD,eAECA,QAFD;AAAA,UAEUE,OAFV,eAEUA,OAFV;AAGP,UAAG,CAAC,KAAKH,KAAL,CAAWG,OAAX,CAAmBgB,MAAvB,EACQ,OAAO,IAAP;AACR,aACE;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACzB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,MAAM,MADR;AAEE,yBAAc,MAFhB;AAGE,yBAAc,WAHhB;AAIE,sBAAW,uBAJb;AAKE,QAAA,OAAO,EAAE,KAAKY,mBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,YAAD;AACE,QAAA,OAAO,EAAC,uBADV;AAEE,QAAA,SAAS,EAAED,OAAO,CAAC,KAAKH,KAAL,CAAWE,aAAZ,CAAP,CAAkCc,IAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CADF,EAeE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,WADL;AAEE,QAAA,QAAQ,EAAEf,QAFZ;AAGE,QAAA,IAAI,EAAEmB,OAAO,CAACnB,QAAD,CAHf;AAIE,QAAA,OAAO,EAAE,KAAKS,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGP,OAAO,CAACkB,GAAR,CAAY,UAACC,MAAD,EAASb,KAAT;AAAA,eACX,oBAAC,QAAD;AACE,UAAA,GAAG,EAAEa,MAAM,CAACN,IADd;AAEE,UAAA,QAAQ,EAAEP,KAAK,KAAK,CAFtB;AAGE,UAAA,QAAQ,EAAEA,KAAK,KAAK,MAAI,CAACT,KAAL,CAAWE,aAHjC;AAIE,UAAA,OAAO,EAAE,iBAAAG,KAAK;AAAA,mBAAI,MAAI,CAACG,mBAAL,CAAyBH,KAAzB,EAAgCI,KAAhC,CAAJ;AAAA,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMGa,MANH,CADW;AAAA,OAAZ,CANH,CAfF,CADF;AAmCD;;;;EAhE0BzC,KAAK,CAAC0C,S;;AAmEnCxB,cAAc,CAACyB,SAAf,GAA2B;AACzBP,EAAAA,OAAO,EAAEnC,SAAS,CAAC2C,MAAV,CAAiBC;AADD,CAA3B;AAIA,eAAe3C,UAAU,CAACO,MAAD,CAAV,CAAmBS,cAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport * as ReadableAPI from '../utils/ReadableAPI'\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nclass SimpleListMenu extends React.Component {\n  state = {\n    anchorEl: null,\n    selectedIndex: 1,\n    options: [],\n  };\n\n  handleClickListItem = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMenuItemClick = (event, index) => {\n    this.setState({ selectedIndex: index, anchorEl: null });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n  componentDidMount(){\n    ReadableAPI.getAllCategories().then(response => {\n      console.log(response)\n      this.setState({options:response.name});\n    })\n  }\n  render() {\n    const { classes } = this.props;\n    const { anchorEl,options } = this.state;\n    if(!this.state.options.length)\n            return null;\n    return (\n      <div className={classes.root}>\n        <List component=\"nav\">\n          <ListItem\n            button\n            aria-haspopup=\"true\"\n            aria-controls=\"lock-menu\"\n            aria-label=\"When device is locked\"\n            onClick={this.handleClickListItem}\n          >\n            <ListItemText\n              primary=\"When device is locked\"\n              secondary={options[this.state.selectedIndex].name}\n            />\n          </ListItem>\n        </List>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          {options.map((option, index) => (\n            <MenuItem\n              key={option.name}\n              disabled={index === 0}\n              selected={index === this.state.selectedIndex}\n              onClick={event => this.handleMenuItemClick(event, index)}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nSimpleListMenu.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimpleListMenu);"]},"metadata":{},"sourceType":"module"}