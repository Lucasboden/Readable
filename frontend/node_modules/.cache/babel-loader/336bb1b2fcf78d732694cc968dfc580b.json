{"ast":null,"code":"import _classCallCheck from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gedanken01/Desktop/Readable/frontend/src/components/ModalComments.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { connect } from 'react-redux';\nvar styles = {\n  appBar: {\n    position: 'relative'\n  },\n  flex: {\n    flex: 1\n  },\n  Button: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    padding: '0 16px'\n  }\n};\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}\n\nvar FullScreenDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FullScreenDialog, _React$Component);\n\n  function FullScreenDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FullScreenDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FullScreenDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(FullScreenDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          postId = _this$props.postId,\n          posts = _this$props.posts,\n          comments = _this$props.comments;\n      console.log(posts);\n      var index = posts.findIndex(function (post) {\n        return post.id === postId;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        fullScreen: true,\n        open: open,\n        onClose: handleClose,\n        TransitionComponent: Transition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        onClick: handleClose,\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        className: classes.flex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, posts[index].title))), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, listComments(comments), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: postId,\n        secondary: \"Titania\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"Default notification ringtone\",\n        secondary: \"Tethys\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return FullScreenDialog;\n}(React.Component);\n\nFullScreenDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction listComments(comments) {\n  var _this2 = this;\n\n  console.log(comments);\n  if (comments !== undefined) return comments.map(function (comment) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: comment.author,\n      secondary: comment.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Votes: \".concat(comment.voteScore))), React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return _this2.handleVote(comment.id, 'upVote');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Vote Up\"), React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return _this2.handleVote(comment.id, 'downVote');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Vote Down\"), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  });\n  return null;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    comments: state.commentsReducer.comments,\n    posts: state.postsReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(FullScreenDialog));","map":{"version":3,"sources":["/home/gedanken01/Desktop/Readable/frontend/src/components/ModalComments.js"],"names":["React","PropTypes","withStyles","Button","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","connect","styles","appBar","position","flex","minWidth","padding","Transition","props","FullScreenDialog","state","open","classes","handleClose","postId","posts","comments","console","log","index","findIndex","post","id","title","listComments","Component","propTypes","object","isRequired","undefined","map","comment","author","body","voteScore","handleVote","mapStateToProps","commentsReducer","postsReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\nimport {connect} from 'react-redux'\n\nconst styles = {\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n  Button: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    padding: '0 16px',\n  },\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass FullScreenDialog extends React.Component {\n  state = {\n    open: false,\n  };\n  render() {\n    \n    const { classes,open,handleClose,postId,posts,comments } = this.props;\n    console.log(posts)\n    const index = posts.findIndex(post => post.id === postId)\n    return (\n      <div>\n        \n        <Dialog\n          fullScreen\n          open={open}\n          onClose={handleClose}\n          TransitionComponent={Transition}\n        >\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                {\n                  posts[index].title\n                }\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <List>\n            {listComments(comments)}\n            <ListItem>\n              <ListItemText primary={postId} secondary=\"Titania\" />\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n            </ListItem>\n          </List>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nFullScreenDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nfunction listComments(comments){\n  console.log(comments)\n  if(comments !== undefined)\n    return(comments.map(comment => (\n      <div>\n        <ListItem>\n          <ListItemText primary={comment.author} secondary={comment.body} />\n          <Typography component=\"p\">\n            {`Votes: ${comment.voteScore}`} \n          </Typography>\n        </ListItem>\n        <Button size=\"small\" color=\"primary\" onClick={() => this.handleVote(comment.id,'upVote')}>\n          Vote Up\n        </Button>\n        <Button size=\"small\" color=\"primary\" onClick={() => this.handleVote(comment.id,'downVote')}>\n          Vote Down\n        </Button>\n        <Divider />\n      </div>\n    )))\n  return null\n}\n\nfunction mapStateToProps (state) {\n  return {  \n    comments: state.commentsReducer.comments,\n    posts:state.postsReducer.posts\n  }\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(FullScreenDialog));"]},"metadata":{},"sourceType":"module"}