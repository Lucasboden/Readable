{"ast":null,"code":"import _classCallCheck from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gedanken01/Desktop/Readable/frontend/src/components/RegisterPost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { fetchRegisterPost } from '../actions/Posts';\nimport { fetchCategories } from '../actions/Category';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    }\n  };\n};\n\nvar RegisterPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterPost, _Component);\n\n  function RegisterPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      posts: [],\n      category: '',\n      name: '',\n      postTitle: '',\n      postContent: '',\n      error: ''\n    };\n\n    _this.handleRegister = function (title, body, author, category) {\n      return function () {\n        var error = '';\n        if (title === '') error = 'title';\n        if (body === '') error = 'content';\n        if (author === '') error = 'name';\n        if (category === '') error = 'category';\n\n        if (error === '') {\n          console.log(title);\n          console.log(body);\n          console.log(author);\n          console.log(category);\n\n          _this.props.dispatch(fetchRegisterPost(title, body, author, category));\n\n          _this.setState({\n            modalOk: true\n          });\n        } else _this.setState({\n          modalError: true,\n          error: error\n        });\n      };\n    };\n\n    _this.handleChangeCategory = function (event) {\n      _this.setState({\n        category: event.target.value\n      });\n    };\n\n    _this.handleChangeName = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleChangeContent = function (event) {\n      _this.setState({\n        content: event.target.value\n      });\n    };\n\n    _this.handleChangeTitle = function (event) {\n      _this.setState({\n        title: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.categories === undefined) this.props.dispatch(fetchCategories());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var categories = this.props.categories;\n      var _this$state = this.state,\n          title = _this$state.title,\n          body = _this$state.body,\n          author = _this$state.author,\n          category = _this$state.category;\n      var itens = '';\n      if (typeof categories !== 'undefined') itens = categories.map(function (category) {\n        return React.createElement(\"option\", {\n          key: category.name,\n          value: category.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, category.name);\n      });else {\n        this.props.dispatch(fetchCategories);\n      }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"New Post\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"name\",\n        name: \"name\",\n        label: \"Name\",\n        onChange: this.handleChangeName,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"title\",\n        name: \"title\",\n        label: \"Post Title\",\n        onChange: this.handleChangeTitle,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"body\",\n        name: \"body\",\n        label: \"Post Content\",\n        onChange: this.handleChangeContent,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Category\"), React.createElement(Select, {\n        native: true,\n        value: this.state.category,\n        name: \"category\",\n        onChange: this.handleChangeCategory,\n        inputProps: {\n          id: 'age-native-required'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), itens))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleRegister(title, body, author, category),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Post\"));\n    }\n  }]);\n\n  return RegisterPost;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    categories: state.categoryReducer.categories\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(RegisterPost));","map":{"version":3,"sources":["/home/gedanken01/Desktop/Readable/frontend/src/components/RegisterPost.js"],"names":["React","Component","connect","withStyles","InputLabel","Button","Grid","Typography","TextField","FormControl","Select","fetchRegisterPost","fetchCategories","styles","theme","button","marginTop","spacing","unit","marginLeft","formControl","margin","minWidth","RegisterPost","state","posts","category","name","postTitle","postContent","error","handleRegister","title","body","author","console","log","props","dispatch","setState","modalOk","modalError","handleChangeCategory","event","target","value","handleChangeName","handleChangeContent","content","handleChangeTitle","categories","undefined","itens","map","id","mapStateToProps","categoryReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux'\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { fetchRegisterPost } from '../actions/Posts';\nimport { fetchCategories } from '../actions/Category';\n\nconst styles = theme => ({\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  }\n});\nclass RegisterPost extends Component{\n  \n  componentDidMount(){\n    if(this.props.categories === undefined)\n      this.props.dispatch(fetchCategories());\n  }\n\n  state = {\n    posts:[],\n    category:'',\n    name:'',\n    postTitle:'',\n    postContent:'',\n    error:'',\n  }\n \n  handleRegister = (title,body,author,category) => () =>{\n    var error = ''\n    if(title === '')\n      error = 'title';\n    if(body === '')\n      error = 'content';\n    if(author === '')\n      error = 'name';\n    if(category === '')\n      error = 'category';\n    if(error === ''){\n      console.log(title)\n      console.log(body)\n      console.log(author)\n      console.log(category)\n      this.props.dispatch(fetchRegisterPost(title,body,author,category))\n      this.setState({modalOk:true})\n    }\n    else\n      this.setState({modalError:true,error:error})\n  };\n  handleChangeCategory = event => {\n    this.setState({ category: event.target.value });\n  };\n  handleChangeName = event => {\n    this.setState({ name: event.target.value });\n  };\n  handleChangeContent = event => {\n    this.setState({ content: event.target.value });\n  };\n  handleChangeTitle = event => {\n    this.setState({ title: event.target.value });\n  };\n  render (){\n    var categories = this.props.categories;\n    var {title,body,author,category} = this.state;\n    var itens = ''\n    if(typeof categories !== 'undefined')\n    itens = categories.map((category) => (\n      <option key={category.name} value={category.name}>{category.name}</option>\n    ))\n    else{\n      this.props.dispatch(fetchCategories);\n    }\n     return(<div>\n      <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        New Post\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"name\"\n            name=\"name\"\n            label=\"Name\"\n            onChange={this.handleChangeName}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Post Title\"\n            onChange={this.handleChangeTitle}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"body\"\n            name=\"body\"\n            label=\"Post Content\"\n            onChange={this.handleChangeContent}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl required>\n          <InputLabel >Category</InputLabel>\n          <Select\n            native\n            value={this.state.category}\n            name=\"category\"\n            onChange={this.handleChangeCategory}\n            inputProps={{\n              id: 'age-native-required',\n            }}\n          >\n            <option value=\"\" />\n            {itens\n            }\n          </Select>\n        </FormControl>\n        </Grid>\n        \n      </Grid>\n    </React.Fragment>\n    <br/>\n      <Button onClick={this.handleRegister(title,body,author,category)}>\n        Post\n      </Button>\n      </div>\n    )\n  }\n}\nfunction mapStateToProps (state) {\n    return {  \n      categories:state.categoryReducer.categories,\n    }\n  }\n\nexport default connect (mapStateToProps)(withStyles(styles)(RegisterPost))\n"]},"metadata":{},"sourceType":"module"}