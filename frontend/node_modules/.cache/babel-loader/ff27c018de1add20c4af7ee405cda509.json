{"ast":null,"code":"import _classCallCheck from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gedanken01/Desktop/Readable/frontend/src/components/EditPost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport { fetchRegisterPost, getPostDetails } from '../actions/Posts';\nimport { fetchCategories } from '../actions/Category';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    }\n  };\n};\n\nvar RegisterPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterPost, _Component);\n\n  function RegisterPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      posts: [],\n      category: '',\n      name: '',\n      postTitle: '',\n      postContent: '',\n      error: '',\n      modalOk: false,\n      modalError: false,\n      post: ''\n    };\n\n    _this.handleChangeContent = function (event) {\n      _this.setState({\n        postContent: event.target.value\n      });\n    };\n\n    _this.handleChangeTitle = function (event) {\n      _this.setState({\n        postTitle: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.dispatch(getPostDetails(this.props.match.params.postId)).then(function (res) {\n        console.log(res);\n\n        _this2.setState({\n          post: res,\n          postTitle: res.title,\n          postContent: res.body\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          postTitle = _this$state.postTitle,\n          postContent = _this$state.postContent,\n          name = _this$state.name,\n          error = _this$state.error,\n          post = _this$state.post;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Edit Post\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        disabled: true,\n        id: \"name\",\n        name: \"name\",\n        label: post.author,\n        editable: \"false\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"title\",\n        name: \"title\",\n        value: postTitle,\n        label: \"Post Title\",\n        onChange: this.handleChangeTitle,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"body\",\n        name: \"body\",\n        value: postContent,\n        label: \"Post Body\",\n        onChange: this.handleChangeContent,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        fullWidth: true,\n        onClick: function onClick() {\n          return _this3.handleEdit(postTitle, postContent, post.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Edit\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RegisterPost;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    categories: state.categoryReducer.categories\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(RegisterPost));","map":{"version":3,"sources":["/home/gedanken01/Desktop/Readable/frontend/src/components/EditPost.js"],"names":["React","Component","connect","withStyles","InputLabel","Button","Grid","Typography","TextField","FormControl","Select","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","fetchRegisterPost","getPostDetails","fetchCategories","styles","theme","button","marginTop","spacing","unit","marginLeft","formControl","margin","minWidth","RegisterPost","state","posts","category","name","postTitle","postContent","error","modalOk","modalError","post","handleChangeContent","event","setState","target","value","handleChangeTitle","props","dispatch","match","params","postId","then","res","console","log","title","body","author","handleEdit","id","mapStateToProps","categories","categoryReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux'\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\n\nimport { fetchRegisterPost,getPostDetails } from '../actions/Posts';\nimport { fetchCategories } from '../actions/Category';\n\nconst styles = theme => ({\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  }\n});\nclass RegisterPost extends Component{\n  \n  componentDidMount(){\n    this.props.dispatch(getPostDetails(this.props.match.params.postId)).then(res =>{\n      console.log(res)\n      this.setState({post: res, postTitle:res.title, postContent:res.body})\n    });\n  }\n\n  state = {\n    posts:[],\n    category:'',\n    name:'',\n    postTitle:'',\n    postContent:'',\n    error:'',\n    modalOk: false,\n    modalError: false,\n    post: '',\n  }\n \n  handleChangeContent = event => {\n    this.setState({ postContent: event.target.value });\n  };\n  handleChangeTitle = event => {\n    this.setState({ postTitle: event.target.value });\n  };\n\n  render (){\n    var {postTitle,postContent,name,error,post} = this.state;\n     return(<div>\n      <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Edit Post\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled\n            id=\"name\"\n            name=\"name\"\n            label={post.author}\n            editable='false'\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"title\"\n            name=\"title\"\n            value={postTitle}\n            label=\"Post Title\"\n            onChange={this.handleChangeTitle}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"body\"\n            name=\"body\"\n            value={postContent}\n            label=\"Post Body\"\n            onChange={this.handleChangeContent}\n            fullWidth\n          />\n          <Divider/>\n        <Grid item xs={12} sm={12}>\n          <Button size=\"small\" color=\"primary\" fullWidth onClick={() => this.handleEdit(postTitle,postContent,post.id)}>\n            Edit\n          </Button>\n        </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n    <br/>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {  \n    categories:state.categoryReducer.categories,\n  }\n}\n\nexport default connect (mapStateToProps)(withStyles(styles)(RegisterPost))\n"]},"metadata":{},"sourceType":"module"}