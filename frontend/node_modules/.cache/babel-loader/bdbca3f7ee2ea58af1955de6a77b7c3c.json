{"ast":null,"code":"import _classCallCheck from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gedanken01/Desktop/Readable/frontend/src/App.js\";\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignIn from './components/SignIn';\nimport ListPost from './components/ListPost';\nimport { loadCategories } from './actions/Category';\n\nvar ReadableApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReadableApp, _React$Component);\n\n  function ReadableApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReadableApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReadableApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      categories: []\n    };\n\n    _this.loadAllCategories = function () {\n      _this.props.store.dispatch(_this.loadCategories());\n    };\n\n    return _this;\n  }\n\n  _createClass(ReadableApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var store = this.props.store;\n      this.setState(function () {\n        return {\n          categories: store.getState()\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n\n    /*  \n      \n      \n    \n      checkBook = (book) => {\n        this.state.want_to_read.map((stBook) => {\n          if(stBook.id === book.id){\n            book.shelf = stBook.shelf\n          }\n        })\n        this.state.currently_reading.map((stBook) => {\n          if(stBook.id === book.id){\n            book.shelf = stBook.shelf\n          }\n        })\n        this.state.read.map((stBook) => {\n          if(stBook.id === book.id){\n            book.shelf = stBook.shelf\n          }\n        })\n      }\n    \n      updateShelf = (updatedBook,shelf) =>{\n        BooksAPI.update(updatedBook,shelf)\n        updatedBook.shelf = shelf;\n        this.setState(prevState => {\n          var cuRe= prevState.currently_reading.filter(book => book.id !== updatedBook.id);\n          var waRe= prevState.want_to_read.filter(book => book.id !== updatedBook.id);\n          var re= prevState.read.filter(book => book.id !== updatedBook.id);\n          switch(shelf){\n            case 'currentlyReading':\n              cuRe= prevState.currently_reading.concat(updatedBook)\n              break;\n            case 'wantToRead':\n              waRe= prevState.want_to_read.concat(updatedBook)\n              break;\n            case 'read':\n              re= prevState.read.concat(updatedBook)\n              break;\n            default:\n              break;\n          };\n          return {currently_reading:cuRe,want_to_read:waRe,read:re, all_books:prevState.all_books};\n        });\n      };*/\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(SignIn, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        render: function render(history) {\n          return React.createElement(ListPost, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ReadableApp;\n}(React.Component);\n\nexport default ReadableApp;","map":{"version":3,"sources":["/home/gedanken01/Desktop/Readable/frontend/src/App.js"],"names":["React","Route","Switch","SignIn","ListPost","loadCategories","ReadableApp","state","categories","loadAllCategories","props","store","dispatch","setState","getState","history","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EACAC,MADA,QACa,kBADb;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,cAAT,QAA+B,oBAA/B;;IACMC,W;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAG;AADP,K;;UAURC,iB,GAAoB,YAAM;AACxB,YAAKC,KAAL,CAAWC,KAAX,CAAiBC,QAAjB,CAA0B,MAAKP,cAAL,EAA1B;AACD,K;;;;;;;wCARmB;AAAA,UACVM,KADU,GACA,KAAKD,KADL,CACVC,KADU;AAElB,WAAKE,QAAL,CAAc;AAAA,eAAO;AACnBL,UAAAA,UAAU,EAAEG,KAAK,CAACG,QAAN;AADO,SAAP;AAAA,OAAd;AAGD;;;;AAIH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAgDW;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE;AAAA,iBAC5B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD4B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,MAAM,EAAE,gBAACC,OAAD;AAAA,iBAC1B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD0B;AAAA,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADA,CADF;AAYD;;;;EA5EuBf,KAAK,CAACgB,S;;AA+EhC,eAAeV,WAAf","sourcesContent":["import React from 'react'\nimport { Route,\nSwitch} from 'react-router-dom'\nimport './App.css'\nimport SignIn from './components/SignIn'\nimport ListPost from './components/ListPost'\nimport { loadCategories } from './actions/Category'\nclass ReadableApp extends React.Component {\n\n  state = {\n    categories : []\n  }\n\n  componentDidMount() {\n    const { store } = this.props\n    this.setState(() => ({\n      categories: store.getState()\n    }))\n  }\n  loadAllCategories = () => {\n    this.props.store.dispatch(this.loadCategories())\n  }\n/*  \n  \n  \n\n  checkBook = (book) => {\n    this.state.want_to_read.map((stBook) => {\n      if(stBook.id === book.id){\n        book.shelf = stBook.shelf\n      }\n    })\n    this.state.currently_reading.map((stBook) => {\n      if(stBook.id === book.id){\n        book.shelf = stBook.shelf\n      }\n    })\n    this.state.read.map((stBook) => {\n      if(stBook.id === book.id){\n        book.shelf = stBook.shelf\n      }\n    })\n  }\n\n  updateShelf = (updatedBook,shelf) =>{\n    BooksAPI.update(updatedBook,shelf)\n    updatedBook.shelf = shelf;\n    this.setState(prevState => {\n      var cuRe= prevState.currently_reading.filter(book => book.id !== updatedBook.id);\n      var waRe= prevState.want_to_read.filter(book => book.id !== updatedBook.id);\n      var re= prevState.read.filter(book => book.id !== updatedBook.id);\n      switch(shelf){\n        case 'currentlyReading':\n          cuRe= prevState.currently_reading.concat(updatedBook)\n          break;\n        case 'wantToRead':\n          waRe= prevState.want_to_read.concat(updatedBook)\n          break;\n        case 'read':\n          re= prevState.read.concat(updatedBook)\n          break;\n        default:\n          break;\n      };\n      return {currently_reading:cuRe,want_to_read:waRe,read:re, all_books:prevState.all_books};\n    });\n  };*/\n\n  \n\n  render() {\n    return (\n      <div>\n      <Switch>\n        <Route exact path='/' render={() => (\n          <SignIn/>\n        )}/>\n        <Route path='/home' render={(history) => (\n          <ListPost/>\n        )}/>\n      </Switch>\n      </div>\n    )\n  }\n}\n\nexport default ReadableApp"]},"metadata":{},"sourceType":"module"}