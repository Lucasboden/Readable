{"ast":null,"code":"import { headers, API } from './config';\n/*\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n*/\n\nexport var getAllCategories = function getAllCategories() {\n  return fetch(\"\".concat(API, \"/categories\"), {\n    headers: headers\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data.categories;\n  });\n};\nexport var getPosts = function getPosts(category) {\n  return fetch('${API}/posts', {\n    headers: headers\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data.posts;\n  });\n};","map":{"version":3,"sources":["/home/gedanken01/Desktop/Readable/frontend/src/utils/ReadableAPI.js"],"names":["headers","API","getAllCategories","fetch","then","res","json","data","categories","getPosts","category","posts"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,GAAlB,QAA6B,UAA7B;AAEA;;;;;;;AAMA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAC9BC,KAAK,WAAIF,GAAJ,kBAAsB;AAAED,IAAAA,OAAO,EAAPA;AAAF,GAAtB,CAAL,CACCI,IADD,CACM,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADT,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,WAAIA,IAAI,CAACC,UAAT;AAAA,GAFV,CAD8B;AAAA,CAAzB;AAKP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,QAAQ;AAAA,SAC9BP,KAAK,CAAC,cAAD,EAAiB;AAAEH,IAAAA,OAAO,EAAPA;AAAF,GAAjB,CAAL,CACCI,IADD,CACM,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADT,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,WAAIA,IAAI,CAACI,KAAT;AAAA,GAFV,CAD8B;AAAA,CAAzB","sourcesContent":["import { headers, API } from './config'\n\n/*\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n*/\nexport const getAllCategories = () =>\n  fetch(`${API}/categories`, { headers })\n  .then(res => res.json())\n  .then(data => data.categories)\n\nexport const getPosts = category =>\n  fetch('${API}/posts', { headers })\n  .then(res => res.json())\n  .then(data => data.posts)\n\n  \n\n"]},"metadata":{},"sourceType":"module"}