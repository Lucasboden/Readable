{"ast":null,"code":"import * as ReadableAPI from '../utils/ReadableAPI';\nexport var LOAD_COMMENTS = 'LOAD_COMMENTS';\nexport var loadComments = function loadComments(comments) {\n  return {\n    type: LOAD_COMMENTS,\n    comments: comments\n  };\n};\nexport var fetchComments = function fetchComments(postId) {\n  return function (dispatch) {\n    return ReadableAPI.getComments(postId).then(function (comments) {\n      return dispatch(loadPosts(comments));\n    });\n  };\n};\n/*\nexport const fetchRegisterPost = (title,body,author,category,id=uuid(),timestamp=Date.now()) => dispatch => (\n\tReadableAPI\n\t.registerPost(title,body,author,category,id,timestamp)\n);\n\nexport const vote = (postId,type) => dispatch => {\n\tReadableAPI.vote(postId,type).then((post) => {\n\t\tdispatch({\n\t\ttype: VOTE_ON_POST,\n\t\tpost\n\t\t})\n\t})\n};\n\nexport const deletePost = (postId) => dispatch => {\n\tReadableAPI.deletePost(postId).then((post) => {\n\t\tdispatch({\n\t\ttype: DELETE_POST,\n\t\tpostId\n\t\t})\n\t})\n};*/","map":{"version":3,"sources":["/home/gedanken01/Desktop/Readable/frontend/src/actions/Comments.js"],"names":["ReadableAPI","LOAD_COMMENTS","loadComments","comments","type","fetchComments","postId","dispatch","getComments","then","loadPosts"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,sBAA7B;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,QAAQ;AAAA,SAAK;AACxCC,IAAAA,IAAI,EAAEH,aADkC;AAExCE,IAAAA,QAAQ,EAARA;AAFwC,GAAL;AAAA,CAA7B;AAKP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM;AAAA,SAAI,UAAAC,QAAQ;AAAA,WAC9CP,WAAW,CACVQ,WADD,CACaF,MADb,EAECG,IAFD,CAEM,UAAAN,QAAQ;AAAA,aAAII,QAAQ,CAACG,SAAS,CAACP,QAAD,CAAV,CAAZ;AAAA,KAFd,CAD8C;AAAA,GAAZ;AAAA,CAA5B;AAKP","sourcesContent":["import * as ReadableAPI from '../utils/ReadableAPI'\n\nexport const LOAD_COMMENTS = 'LOAD_COMMENTS'\n\nexport const loadComments = comments => ({\n\ttype: LOAD_COMMENTS,\n\tcomments\n})\n\nexport const fetchComments = postId => dispatch => (\n\tReadableAPI\n\t.getComments(postId)\n\t.then(comments => dispatch(loadPosts(comments)))\n);\n/*\nexport const fetchRegisterPost = (title,body,author,category,id=uuid(),timestamp=Date.now()) => dispatch => (\n\tReadableAPI\n\t.registerPost(title,body,author,category,id,timestamp)\n);\n\nexport const vote = (postId,type) => dispatch => {\n\tReadableAPI.vote(postId,type).then((post) => {\n\t\tdispatch({\n\t\ttype: VOTE_ON_POST,\n\t\tpost\n\t\t})\n\t})\n};\n\nexport const deletePost = (postId) => dispatch => {\n\tReadableAPI.deletePost(postId).then((post) => {\n\t\tdispatch({\n\t\ttype: DELETE_POST,\n\t\tpostId\n\t\t})\n\t})\n};*/"]},"metadata":{},"sourceType":"module"}