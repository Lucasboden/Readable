{"ast":null,"code":"import _classCallCheck from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gedanken01/Desktop/Readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gedanken01/Desktop/Readable/frontend/src/components/EditComment.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { getCommentDetails, editComment } from '../actions/Comments';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    }\n  };\n};\n\nvar EditComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditComment, _Component);\n\n  function EditComment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditComment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      commentContent: '',\n      comment: ''\n    };\n\n    _this.handleChangeContent = function (event) {\n      _this.setState({\n        commentContent: event.target.value\n      });\n    };\n\n    _this.handleEdit = function (commentTitle, commentContent, commentId) {\n      _this.props.dispatch(editComment(commentContent, commentId));\n    };\n\n    return _this;\n  }\n\n  _createClass(EditComment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.state.comment === '' || this.state.comment === undefined) this.props.dispatch(getCommentDetails(this.props.match.params.commentId)).then(function (res) {\n        _this2.setState({\n          comment: res,\n          commentContent: res.body\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          commentContent = _this$state.commentContent,\n          comment = _this$state.comment;\n      console.log(comment);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Edit comment\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        disabled: true,\n        id: \"name\",\n        name: \"name\",\n        label: comment.author,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"body\",\n        name: \"body\",\n        value: commentContent,\n        label: \"Comment Body\",\n        onChange: this.handleChangeContent,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        fullWidth: true,\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this3.handleEdit(commentContent, comment.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Edit\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditComment;\n}(Component);\n\nexport default connect()(withStyles(styles)(EditComment));","map":{"version":3,"sources":["/home/gedanken01/Desktop/Readable/frontend/src/components/EditComment.js"],"names":["React","Component","connect","withStyles","Button","Grid","Typography","TextField","getCommentDetails","editComment","styles","theme","button","marginTop","spacing","unit","marginLeft","formControl","margin","minWidth","EditComment","state","commentContent","comment","handleChangeContent","event","setState","target","value","handleEdit","commentTitle","commentId","props","dispatch","undefined","match","params","then","res","body","console","log","author","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux'\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getCommentDetails,editComment } from '../actions/Comments';\n\nconst styles = theme => ({\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  }\n});\nclass EditComment extends Component{\n  \n  componentDidMount(){\n    if(this.state.comment === '' || this.state.comment === undefined)\n      this.props.dispatch(getCommentDetails(this.props.match.params.commentId)).then(res =>{\n        this.setState({comment: res, commentContent:res.body})\n    });\n  }\n\n  state = {\n    commentContent:'',\n    comment: '',\n  }\n \n  handleChangeContent = event => {\n    this.setState({ commentContent: event.target.value });\n  };\n  handleEdit = (commentTitle,commentContent,commentId) => {\n    this.props.dispatch(editComment(commentContent,commentId))\n  };\n\n  render (){\n    var {commentContent,comment} = this.state;\n    console.log(comment)\n     return(<div>\n      <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Edit comment\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled\n            id=\"name\"\n            name=\"name\"\n            label={comment.author}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"body\"\n            name=\"body\"\n            value={commentContent}\n            label=\"Comment Body\"\n            onChange={this.handleChangeContent}\n            fullWidth\n          />\n          <br/>\n          <br/>\n        <Grid item xs={12} sm={12}>\n          <Button \n            size=\"small\" \n            color=\"primary\" \n            fullWidth \n            variant=\"contained\"\n            onClick={() => this.handleEdit(commentContent,comment.id)}>\n            Edit\n          </Button>\n        </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n    <br/>\n      </div>\n    )\n  }\n}\n\nexport default connect ()(withStyles(styles)(EditComment))\n"]},"metadata":{},"sourceType":"module"}