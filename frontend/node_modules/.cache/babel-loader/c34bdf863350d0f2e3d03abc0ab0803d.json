{"ast":null,"code":"import _classCallCheck from \"/home/lucas/Desktop/React/Readable/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lucas/Desktop/React/Readable/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lucas/Desktop/React/Readable/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lucas/Desktop/React/Readable/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lucas/Desktop/React/Readable/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lucas/Desktop/React/Readable/frontend/src/App.js\";\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignIn from './SignIn';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    _classCallCheck(this, BooksApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BooksApp).apply(this, arguments));\n  }\n\n  _createClass(BooksApp, [{\n    key: \"render\",\n\n    /*  state = {\n        currently_reading:[],\n        want_to_read:[],\n        read:[],\n        all_books:[]\n      }\n      \n      componentDidMount() {\n        BooksAPI.getAll().then((book => {\n          this.setState({ currently_reading:book.filter(book => book.shelf === 'currentlyReading'),\n          want_to_read:book.filter(book => book.shelf === 'wantToRead'),\n          read:book.filter(book => book.shelf === 'read'),\n          all_books:book\n         })\n        }))\n      }\n    \n      checkBook = (book) => {\n        this.state.want_to_read.map((stBook) => {\n          if(stBook.id === book.id){\n            book.shelf = stBook.shelf\n          }\n        })\n        this.state.currently_reading.map((stBook) => {\n          if(stBook.id === book.id){\n            book.shelf = stBook.shelf\n          }\n        })\n        this.state.read.map((stBook) => {\n          if(stBook.id === book.id){\n            book.shelf = stBook.shelf\n          }\n        })\n      }\n    \n      updateShelf = (updatedBook,shelf) =>{\n        BooksAPI.update(updatedBook,shelf)\n        updatedBook.shelf = shelf;\n        this.setState(prevState => {\n          var cuRe= prevState.currently_reading.filter(book => book.id !== updatedBook.id);\n          var waRe= prevState.want_to_read.filter(book => book.id !== updatedBook.id);\n          var re= prevState.read.filter(book => book.id !== updatedBook.id);\n          switch(shelf){\n            case 'currentlyReading':\n              cuRe= prevState.currently_reading.concat(updatedBook)\n              break;\n            case 'wantToRead':\n              waRe= prevState.want_to_read.concat(updatedBook)\n              break;\n            case 'read':\n              re= prevState.read.concat(updatedBook)\n              break;\n            default:\n              break;\n          };\n          return {currently_reading:cuRe,want_to_read:waRe,read:re, all_books:prevState.all_books};\n        });\n      };*/\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(SignIn, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/search\",\n        render: function render(_ref) {\n          var history = _ref.history;\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \"asd\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/home/lucas/Desktop/React/Readable/frontend/src/App.js"],"names":["React","Route","Switch","SignIn","BooksApp","history","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EACAC,MADA,QACa,kBADb;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IACMC,Q;;;;;;;;;;;;;;AACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BA0DW;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE;AAAA,iBAC5B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD4B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,MAAM,EAAE;AAAA,cAAGC,OAAH,QAAGA,OAAH;AAAA,iBAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAD4B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADA,CADF;AAYD;;;;EAxEoBL,KAAK,CAACM,S;;AA2E7B,eAAeF,QAAf","sourcesContent":["import React from 'react'\nimport { Route,\nSwitch} from 'react-router-dom'\nimport './App.css'\nimport SignIn from './SignIn'\nclass BooksApp extends React.Component {\n/*  state = {\n    currently_reading:[],\n    want_to_read:[],\n    read:[],\n    all_books:[]\n  }\n  \n  componentDidMount() {\n    BooksAPI.getAll().then((book => {\n      this.setState({ currently_reading:book.filter(book => book.shelf === 'currentlyReading'),\n      want_to_read:book.filter(book => book.shelf === 'wantToRead'),\n      read:book.filter(book => book.shelf === 'read'),\n      all_books:book\n     })\n    }))\n  }\n\n  checkBook = (book) => {\n    this.state.want_to_read.map((stBook) => {\n      if(stBook.id === book.id){\n        book.shelf = stBook.shelf\n      }\n    })\n    this.state.currently_reading.map((stBook) => {\n      if(stBook.id === book.id){\n        book.shelf = stBook.shelf\n      }\n    })\n    this.state.read.map((stBook) => {\n      if(stBook.id === book.id){\n        book.shelf = stBook.shelf\n      }\n    })\n  }\n\n  updateShelf = (updatedBook,shelf) =>{\n    BooksAPI.update(updatedBook,shelf)\n    updatedBook.shelf = shelf;\n    this.setState(prevState => {\n      var cuRe= prevState.currently_reading.filter(book => book.id !== updatedBook.id);\n      var waRe= prevState.want_to_read.filter(book => book.id !== updatedBook.id);\n      var re= prevState.read.filter(book => book.id !== updatedBook.id);\n      switch(shelf){\n        case 'currentlyReading':\n          cuRe= prevState.currently_reading.concat(updatedBook)\n          break;\n        case 'wantToRead':\n          waRe= prevState.want_to_read.concat(updatedBook)\n          break;\n        case 'read':\n          re= prevState.read.concat(updatedBook)\n          break;\n        default:\n          break;\n      };\n      return {currently_reading:cuRe,want_to_read:waRe,read:re, all_books:prevState.all_books};\n    });\n  };*/\n  render() {\n    return (\n      <div>\n      <Switch>\n        <Route exact path='/' render={() => (\n          <SignIn/>\n        )}/>\n        <Route path='/search' render={({ history }) => (\n          <h1>asd</h1>\n        )}/>\n      </Switch>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp"]},"metadata":{},"sourceType":"module"}