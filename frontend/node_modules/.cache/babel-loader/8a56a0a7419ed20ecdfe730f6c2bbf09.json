{"ast":null,"code":"import * as ReadableAPI from '../utils/ReadableAPI';\nexport var LOAD_COMMENTS = 'LOAD_COMMENTS';\nexport var loadComments = function loadComments(comments) {\n  return {\n    type: LOAD_COMMENTS,\n    comments: comments\n  };\n};\nexport var fetchComments = function fetchComments(postId) {\n  return function (dispatch) {\n    return ReadableAPI.getComments(postId).then(function (comments) {\n      return dispatch(loadComments(comments));\n    });\n  };\n};\n/*\nexport const fetchRegisterPost = (title,body,author,category,id=uuid(),timestamp=Date.now()) => dispatch => (\n\tReadableAPI\n\t.registerPost(title,body,author,category,id,timestamp)\n);\n*/\n\nexport var vote = function vote(commentId, type) {\n  return function (dispatch) {\n    ReadableAPI.voteComment(commentId, type).then(function (post) {\n      dispatch({\n        type: VOTE_ON_COMMENT,\n        comment: comment\n      });\n    });\n  };\n};\nexport var deleteComment = function deleteComment(commentId) {\n  return function (dispatch) {\n    ReadableAPI.deleteComment(commentId).then(function (comment) {\n      dispatch({\n        type: DELETE_COMMENT,\n        commentId: commentId\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/gedanken01/Desktop/Readable/frontend/src/actions/Comments.js"],"names":["ReadableAPI","LOAD_COMMENTS","loadComments","comments","type","fetchComments","postId","dispatch","getComments","then","vote","commentId","voteComment","post","VOTE_ON_COMMENT","comment","deleteComment","DELETE_COMMENT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,sBAA7B;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,QAAQ;AAAA,SAAK;AACxCC,IAAAA,IAAI,EAAEH,aADkC;AAExCE,IAAAA,QAAQ,EAARA;AAFwC,GAAL;AAAA,CAA7B;AAKP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM;AAAA,SAAI,UAAAC,QAAQ;AAAA,WAC9CP,WAAW,CACVQ,WADD,CACaF,MADb,EAECG,IAFD,CAEM,UAAAN,QAAQ;AAAA,aAAII,QAAQ,CAACL,YAAY,CAACC,QAAD,CAAb,CAAZ;AAAA,KAFd,CAD8C;AAAA,GAAZ;AAAA,CAA5B;AAOP;;;;;;;AAMA,OAAO,IAAMO,IAAI,GAAG,SAAPA,IAAO,CAACC,SAAD,EAAWP,IAAX;AAAA,SAAoB,UAAAG,QAAQ,EAAI;AACnDP,IAAAA,WAAW,CAACY,WAAZ,CAAwBD,SAAxB,EAAkCP,IAAlC,EAAwCK,IAAxC,CAA6C,UAACI,IAAD,EAAU;AACtDN,MAAAA,QAAQ,CAAC;AACTH,QAAAA,IAAI,EAAEU,eADG;AAETC,QAAAA,OAAO,EAAPA;AAFS,OAAD,CAAR;AAIA,KALD;AAMA,GAPmB;AAAA,CAAb;AASP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACL,SAAD;AAAA,SAAe,UAAAJ,QAAQ,EAAI;AACvDP,IAAAA,WAAW,CAACgB,aAAZ,CAA0BL,SAA1B,EAAqCF,IAArC,CAA0C,UAACM,OAAD,EAAa;AACtDR,MAAAA,QAAQ,CAAC;AACTH,QAAAA,IAAI,EAAEa,cADG;AAETN,QAAAA,SAAS,EAATA;AAFS,OAAD,CAAR;AAIA,KALD;AAMA,GAP4B;AAAA,CAAtB","sourcesContent":["import * as ReadableAPI from '../utils/ReadableAPI'\n\nexport const LOAD_COMMENTS = 'LOAD_COMMENTS'\n\nexport const loadComments = comments => ({\n\ttype: LOAD_COMMENTS,\n\tcomments\n})\n\nexport const fetchComments = postId => dispatch => (\n\tReadableAPI\n\t.getComments(postId)\n\t.then(comments => dispatch(loadComments(comments)))\n);\n\n\n/*\nexport const fetchRegisterPost = (title,body,author,category,id=uuid(),timestamp=Date.now()) => dispatch => (\n\tReadableAPI\n\t.registerPost(title,body,author,category,id,timestamp)\n);\n*/\nexport const vote = (commentId,type) => dispatch => {\n\tReadableAPI.voteComment(commentId,type).then((post) => {\n\t\tdispatch({\n\t\ttype: VOTE_ON_COMMENT,\n\t\tcomment\n\t\t})\n\t})\n};\n\nexport const deleteComment = (commentId) => dispatch => {\n\tReadableAPI.deleteComment(commentId).then((comment) => {\n\t\tdispatch({\n\t\ttype: DELETE_COMMENT,\n\t\tcommentId\n\t\t})\n\t})\n};"]},"metadata":{},"sourceType":"module"}